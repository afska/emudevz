{"version":3,"file":"audioWorklet-DVgwcqTq.js","sources":["../node_modules/ringbufferjs/index.js","../src/gui/components/emulator/runner/audioWorklet.js"],"sourcesContent":["/**\n * Expose `RingBuffer`.\n */\nmodule.exports = RingBuffer;\n\n/**\n * Initializes a new empty `RingBuffer` with the given `capacity`, when no\n * value is provided uses the default capacity (50).\n *\n * If provided, `evictedCb` gets run with any evicted elements.\n *\n * @param {Number}\n * @param {Function}\n * @return {RingBuffer}\n * @api public\n */\nfunction RingBuffer(capacity, evictedCb) {\n  this._elements = new Array(capacity || 50);\n  this._first = 0;\n  this._last = 0;\n  this._size = 0;\n  this._evictedCb = evictedCb;\n}\n\n/**\n * Returns the capacity of the ring buffer.\n *\n * @return {Number}\n * @api public\n */\nRingBuffer.prototype.capacity = function() {\n  return this._elements.length;\n};\n\n/**\n * Returns whether the ring buffer is empty or not.\n *\n * @return {Boolean}\n * @api public\n */\nRingBuffer.prototype.isEmpty = function() {\n  return this.size() === 0;\n};\n\n/**\n * Returns whether the ring buffer is full or not.\n *\n * @return {Boolean}\n * @api public\n */\nRingBuffer.prototype.isFull = function() {\n  return this.size() === this.capacity();\n};\n\n/**\n * Peeks at the top element of the queue.\n *\n * @return {Object}\n * @throws {Error} when the ring buffer is empty.\n * @api public\n */\nRingBuffer.prototype.peek = function() {\n  if (this.isEmpty()) throw new Error('RingBuffer is empty');\n\n  return this._elements[this._first];\n};\n\n/**\n * Peeks at multiple elements in the queue.\n *\n * @return {Array}\n * @throws {Error} when there are not enough elements in the buffer.\n * @api public\n */\nRingBuffer.prototype.peekN = function(count) {\n  if (count > this._size) throw new Error('Not enough elements in RingBuffer');\n\n  var end = Math.min(this._first + count, this.capacity());\n  var firstHalf = this._elements.slice(this._first, end);\n  if (end < this.capacity()) {\n    return firstHalf;\n  }\n  var secondHalf = this._elements.slice(0, count - firstHalf.length);\n  return firstHalf.concat(secondHalf);\n};\n\n/**\n * Dequeues the top element of the queue.\n *\n * @return {Object}\n * @throws {Error} when the ring buffer is empty.\n * @api public\n */\nRingBuffer.prototype.deq = function() {\n  var element = this.peek();\n\n  this._size--;\n  this._first = (this._first + 1) % this.capacity();\n\n  return element;\n};\n\n/**\n * Dequeues multiple elements of the queue.\n *\n * @return {Array}\n * @throws {Error} when there are not enough elements in the buffer.\n * @api public\n */\nRingBuffer.prototype.deqN = function(count) {\n  var elements = this.peekN(count);\n\n  this._size -= count;\n  this._first = (this._first + count) % this.capacity();\n\n  return elements;\n};\n\n/**\n * Enqueues the `element` at the end of the ring buffer and returns its new size.\n *\n * @param {Object} element\n * @return {Number}\n * @api public\n */\nRingBuffer.prototype.enq = function(element) {\n  this._end = (this._first + this.size()) % this.capacity();\n  var full = this.isFull()\n  if (full && this._evictedCb) {\n    this._evictedCb(this._elements[this._end]);\n  }\n  this._elements[this._end] = element;\n\n  if (full) {\n    this._first = (this._first + 1) % this.capacity();\n  } else {\n    this._size++;\n  }\n\n  return this.size();\n};\n\n/**\n * Returns the size of the queue.\n *\n * @return {Number}\n * @api public\n */\nRingBuffer.prototype.size = function() {\n  return this._size;\n};\n","import RingBuffer from \"ringbufferjs\";\n\nconst AUDIO_BUFFER_SIZE = 4096;\nconst MAX_IN_FLIGHT = 10; // (tied to Emulation.js)\n\nclass PlayerWorklet extends AudioWorkletProcessor {\n\tconstructor(options) {\n\t\tsuper();\n\n\t\tconst ringBufferSize =\n\t\t\toptions?.processorOptions?.ringBufferSize || AUDIO_BUFFER_SIZE;\n\t\tthis.buffer = new RingBuffer(ringBufferSize);\n\t\tthis.inFlight = 0;\n\n\t\tthis.port.onmessage = (event) => {\n\t\t\tfor (let sample of event.data) this.buffer.enq(sample);\n\t\t\tif (this.inFlight > 0) this.inFlight--;\n\t\t};\n\t}\n\n\tprocess(inputs, outputs) {\n\t\tconst output = outputs[0][0];\n\t\tconst size = output.length;\n\n\t\ttry {\n\t\t\tconst samples = this.buffer.deqN(size);\n\t\t\tfor (let i = 0; i < size; i++) output[i] = samples[i];\n\t\t} catch (e) {\n\t\t\t// buffer underrun (needed {size}, got {this.buffer.size()})\n\t\t\t// ignore empty buffers... assume audio has just stopped\n\t\t\tfor (let i = 0; i < size; i++) output[i] = 0;\n\t\t}\n\n\t\t// request new samples\n\t\tconst need = size;\n\t\tconst have = this.buffer.size();\n\t\tconst target = AUDIO_BUFFER_SIZE / 2;\n\t\tif (this.inFlight < MAX_IN_FLIGHT) {\n\t\t\tthis.port.postMessage({ need, have, target });\n\t\t\tthis.inFlight++;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n\nregisterProcessor(\"player-worklet\", PlayerWorklet);\n"],"names":["RingBuffer"],"mappings":"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","x_google_ignoreList":[0]}